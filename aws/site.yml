AWSTemplateFormatVersion: '2010-09-09'
Description: Naked domain site with redirect from www
Parameters:
  Domain:
    Type: String
  AcmCertificateArn:
    Type: String
Resources:
  RootWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref Domain
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  RootWebsiteOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Allow S3 access by CloudFront only
  RootWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RootWebsiteBucket
      PolicyDocument:
        Statement:
          - Sid: AllowGetBucketObjectsForCloudFrontOAI
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${RootWebsiteOAI}"
            Action: s3:GetObject
            Resource: !Sub ${RootWebsiteBucket.Arn}/*
  RootWebsiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref Domain
        Origins:
          - Id: S3Origin
            DomainName: !Sub ${RootWebsiteBucket}.s3.${AWS::Region}.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${RootWebsiteOAI}
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_200
  WWWWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub www.${Domain}
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref Domain
          Protocol: https
  WWWWebsiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Sub www.${Domain}
        Origins:
          - Id: redirect-origin
            DomainName: !Sub ${WWWWebsiteBucket}.s3-website.${AWS::Region}.amazonaws.com
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          Compress: true
          TargetOriginId: redirect-origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2018
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_200
  WebsiteDNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub ${Domain}.
      RecordSets:
        - Name: !Sub www.${Domain}
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !Sub ${WWWWebsiteCDN.DomainName}
        - Name: !Ref Domain
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !Sub ${RootWebsiteCDN.DomainName}
Outputs:
  Bucket:
    Value: !Ref RootWebsiteBucket
  Cloudfront:
    Value: !Sub ${RootWebsiteCDN.DomainName}
  DomainName:
    Value: !Ref WebsiteDNSName
